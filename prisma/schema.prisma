// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @map("_id") @default(cuid())
  name          String?
  // if you are using Github OAuth, you can get rid of the username attribute (that is for Twitter OAuth)
  username      String?
  gh_username   String?
  email         String?  
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  sites         Site[]
  posts         Post[]
  Event         Event[]
  phoneNumber   String?   @unique
  role          String    @default("Registered")


}

model Account {
  id                       String  @id @map("_id") @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String?
  refresh_token_expires_in Int?
  access_token             String?
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String?
  session_state            String?
  oauth_token_secret       String?
  oauth_token              String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @map("_id") @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model VerificationToken {
  identifier String	  @id @map("_id")
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Post {
  id            String   @id @map("_id") @default(cuid())
  title         String?  
  description   String?  
  content       String?  
  slug          String   @default(cuid())
  image         String?
  imageBlurhash String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  published     Boolean  @default(false)
  site          Site?    @relation(fields: [siteId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  siteId        String?
  user          User?    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId        String?

  @@unique([slug, siteId])
  @@index([siteId])
  @@index([userId])
}

model Event {
  id            String   @id @map("_id") @default(cuid())
  title         String?  
  description   String?  
  type          String?  
  slug          String   @default(cuid())
  image         String?
  imageBlurhash String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  approved      Boolean  @default(false)
  site          Site?    @relation(fields: [siteId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  siteId        String?
  user          User?    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId        String?

  @@unique([slug, siteId])
  @@index([siteId])
  @@index([userId])
}

model Site {
  id            String   @id @map("_id") @default(cuid())
  name          String
  description   String? 
  address       String? 
  placeID       String  @unique
  postcode		String?
  gpsLat        Float
  gpsLng        Float
  logo          String?
  font          String   @default("font-cal")
  image         String?
  imageBlurhash String?
  subdomain     String  @unique
  customDomain  String?  @unique
  message404    String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User?    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId        String?
  posts         Post[]
  Event         Event[]

  @@index([userId])
}

model Example {
  id            Int     @id @map("_id")
  name          String?
  description   String?
  domainCount   Int?
  url           String?
  image         String?
  imageBlurhash String? 
}
